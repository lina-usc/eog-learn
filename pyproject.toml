[build-system]
requires = ['setuptools >= 61.0.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'EOGLearn'
version = "0.1.dev0"
description = 'EOGLearn: Remove EOG artifact from simultaneously collected MEEG eye-tracking data.'
readme = 'README.md'
license = {file = 'LICENSE'}
requires-python = '>=3.8'
maintainers = [
    {name = 'Scott Huberty', email = 'seh33@uw.edu'},
    {name = "Christian O'Reilly", email = 'christian.oreilly@sc.edu'},
]
keywords = [
    'meg',
    'eeg',
    'eyetracking',
    'neuroscience',
]
classifiers = [
    'Operating System :: Microsoft :: Windows',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Natural Language :: English',
    'License :: OSI Approved :: BSD License',
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
]
dependencies = [
    'mne >= 1.5',
    'scikit-learn >= 1.0',
    'tensorflow-cpu',
]

[project.optional-dependencies]
gpu = [
    'tensorflow',
]
doc = [
    'numpydoc',
    'shibuya',
    'sphinx',
    'sphinxcontrib-bibtex',
    'sphinx-copybutton',
    'sphinxemoji',
    'sphinx-design',
    'sphinx-gallery',
    'sphinx-issues',
]

extras = ['pymatreader', 'pandas', 'defusedxml']

test = [
    'black',
    'codespell',
    'isort',
    'ruff',
    'pydocstyle[toml]',    
    'pytest',
    'pytest-cov',
]
all = [
    'eoglearn[gpu]',
    'eoglearn[doc]',
    'eoglearn[test]',
    'eoglearn[extras]',
]
full = [
    'eoglearn[all]',
]

[project.urls]
source = 'https://github.com/scott-huberty/EOGLearn'
tracker = 'https://github.com/scott-huberty/EOGLearn/issues'
# documentation = 'https://github.com/scott-huberty/EOGLearn/'

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['eoglearn*']
exclude = ['eoglearn*tests']

# [tool.setuptools.package-data]
# "eoglearn" = ["assets/*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github
    | setup.py
    | doc/
    | examples/
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 88
py_version = 39
extend_skip_glob = [
    'setup.py',
    'doc/*',
    'examples/*',
]

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^meeg_eyekit.*'
add_ignore = 'D100,D104,D107'

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
filterwarnings = [
    "ignore:ml_dtypes.float8_e4m3b11 is deprecated.",
    ]

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
    '**/__init__.py',
    '**/eoglearn/_version.py',
    '**/tests/**',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if __name__ == .__main__.:',
]
precision = 2

[tool.ruff]
select = ["E", "F", "W", "D", "I"]
exclude = ["__init__.py"]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D413", # Missing blank line after last section
]

[tool.ruff.pydocstyle]
convention = "numpy"
ignore-decorators = []